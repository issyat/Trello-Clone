# Generated by Django 4.2.7 on 2025-05-29 02:24

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("projects", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Task",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        help_text="Task title (max 200 characters)",
                        max_length=200,
                        validators=[django.core.validators.MinLengthValidator(1)],
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Optional task description (max 2000 characters)",
                        max_length=2000,
                    ),
                ),
                (
                    "position",
                    models.PositiveIntegerField(
                        default=0, help_text="Position of the task in the list"
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("urgent", "Urgent"),
                        ],
                        default="medium",
                        help_text="Task priority level",
                        max_length=10,
                    ),
                ),
                (
                    "label_color",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("#61bd4f", "Green"),
                            ("#f2d600", "Yellow"),
                            ("#ff9f1a", "Orange"),
                            ("#eb5a46", "Red"),
                            ("#c377e0", "Purple"),
                            ("#0079bf", "Blue"),
                            ("#00c2e0", "Sky"),
                            ("#51e898", "Lime"),
                            ("#ff78cb", "Pink"),
                            ("#344563", "Black"),
                        ],
                        help_text="Optional label color for the task",
                        max_length=7,
                        null=True,
                    ),
                ),
                (
                    "due_date",
                    models.DateTimeField(
                        blank=True,
                        help_text="Optional due date for the task",
                        null=True,
                    ),
                ),
                (
                    "is_completed",
                    models.BooleanField(
                        default=False, help_text="Whether the task is completed"
                    ),
                ),
                (
                    "is_archived",
                    models.BooleanField(
                        default=False, help_text="Whether the task is archived"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "completed_at",
                    models.DateTimeField(
                        blank=True, help_text="When the task was completed", null=True
                    ),
                ),
                (
                    "assignees",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Users assigned to this task",
                        related_name="assigned_tasks",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "creator",
                    models.ForeignKey(
                        help_text="User who created this task",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_tasks",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Task",
                "verbose_name_plural": "Tasks",
                "ordering": ["position", "created_at"],
            },
        ),
        migrations.CreateModel(
            name="TaskList",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="List name (max 100 characters)",
                        max_length=100,
                        validators=[django.core.validators.MinLengthValidator(1)],
                    ),
                ),
                (
                    "position",
                    models.PositiveIntegerField(
                        default=0, help_text="Position of the list in the project"
                    ),
                ),
                (
                    "is_archived",
                    models.BooleanField(
                        default=False, help_text="Whether the list is archived"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "project",
                    models.ForeignKey(
                        help_text="Project this list belongs to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="task_lists",
                        to="projects.project",
                    ),
                ),
            ],
            options={
                "verbose_name": "Task List",
                "verbose_name_plural": "Task Lists",
                "ordering": ["position", "created_at"],
            },
        ),
        migrations.CreateModel(
            name="TaskComment",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "content",
                    models.TextField(
                        help_text="Comment content (max 1000 characters)",
                        max_length=1000,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "is_edited",
                    models.BooleanField(
                        default=False, help_text="Whether the comment has been edited"
                    ),
                ),
                (
                    "author",
                    models.ForeignKey(
                        help_text="User who wrote this comment",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="task_comments",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "task",
                    models.ForeignKey(
                        help_text="Task this comment belongs to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comments",
                        to="tasks.task",
                    ),
                ),
            ],
            options={
                "verbose_name": "Task Comment",
                "verbose_name_plural": "Task Comments",
                "ordering": ["created_at"],
            },
        ),
        migrations.AddField(
            model_name="task",
            name="task_list",
            field=models.ForeignKey(
                help_text="List this task belongs to",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="tasks",
                to="tasks.tasklist",
            ),
        ),
        migrations.AddIndex(
            model_name="tasklist",
            index=models.Index(
                fields=["project", "position"], name="tasks_taskl_project_0e1141_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="tasklist",
            index=models.Index(
                fields=["project", "is_archived"], name="tasks_taskl_project_d0830d_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="tasklist",
            unique_together={("project", "position")},
        ),
        migrations.AddIndex(
            model_name="taskcomment",
            index=models.Index(
                fields=["task", "created_at"], name="tasks_taskc_task_id_3f97e8_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="taskcomment",
            index=models.Index(
                fields=["author"], name="tasks_taskc_author__b4773a_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="task",
            index=models.Index(
                fields=["task_list", "position"], name="tasks_task_task_li_c9372a_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="task",
            index=models.Index(
                fields=["task_list", "is_archived"],
                name="tasks_task_task_li_4d63d2_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="task",
            index=models.Index(
                fields=["creator"], name="tasks_task_creator_b6157f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="task",
            index=models.Index(
                fields=["priority"], name="tasks_task_priorit_a900d4_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="task",
            index=models.Index(
                fields=["due_date"], name="tasks_task_due_dat_bce847_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="task",
            index=models.Index(
                fields=["is_completed"], name="tasks_task_is_comp_30fbc3_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="task",
            unique_together={("task_list", "position")},
        ),
    ]
