name: Backend CI/CD Pipeline

on:
  pull_request:
    branches: [dev]
  push:
    branches: [dev, main]

env:
  POSTGRES_PASSWORD: postgres
  POSTGRES_USER: postgres
  POSTGRES_DB: trello_db_test

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: trello_db_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: Cache Poetry dependencies
      uses: actions/cache@v3
      with:
        path: backend/.venv
        key: venv-${{ runner.os }}-${{ hashFiles('**/pyproject.toml') }}

    - name: Install backend dependencies
      working-directory: ./backend
      run: |
        poetry lock --no-update
        poetry install --with dev

    - name: Run Django checks
      working-directory: ./backend
      env:
        CI: 'true'
        POSTGRES_DB: trello_db_test
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
        SECRET_KEY: test-secret-key-for-ci
        DEBUG: 'false'
        ALLOWED_HOSTS: localhost,127.0.0.1
        DJANGO_SETTINGS_MODULE: trello_backend.test_settings
      run: |
        poetry run python manage.py check

    - name: Run migrations
      working-directory: ./backend
      env:
        CI: 'true'
        POSTGRES_DB: trello_db_test
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
        SECRET_KEY: test-secret-key-for-ci
        DEBUG: 'false'
        ALLOWED_HOSTS: localhost,127.0.0.1
        DJANGO_SETTINGS_MODULE: trello_backend.test_settings
      run: |
        poetry run python manage.py migrate

    - name: Lint backend code
      working-directory: ./backend
      run: |
        poetry run flake8 apps/ trello_backend/ --max-line-length=88 --extend-ignore=E203,W503
        poetry run black --check apps/ trello_backend/
        poetry run isort --check-only apps/ trello_backend/

    - name: Run backend tests
      working-directory: ./backend
      env:
        CI: 'true'
        POSTGRES_DB: trello_db_test
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
        SECRET_KEY: test-secret-key-for-ci
        DEBUG: 'false'
        ALLOWED_HOSTS: localhost,127.0.0.1
        DJANGO_SETTINGS_MODULE: trello_backend.test_settings
      run: |
        poetry run python manage.py collectstatic --noinput
        poetry run pytest -v --cov=apps --cov-report=xml --cov-report=term-missing

    - name: Upload coverage reports
      uses: codecov/codecov-action@v4
      with:
        file: ./backend/coverage.xml
        flags: backend
        name: backend-coverage

  build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build backend Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./backend
        file: ./backend/Dockerfile
        push: false
        tags: trello-backend:test
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Test backend Docker container
      run: |
        docker network create trello-test || true
        
        docker run -d --name postgres-test --network trello-test \
          -e POSTGRES_DB=trello_db_test \
          -e POSTGRES_USER=postgres \
          -e POSTGRES_PASSWORD=postgres \
          -p 5433:5432 \
          postgres:15
        
        sleep 10
        
        docker run -d --name backend-test --network trello-test \
          -e DATABASE_URL=postgresql://postgres:postgres@postgres-test:5432/trello_db_test \
          -e SECRET_KEY=test-secret-key \
          -e DEBUG=false \
          -p 8001:8000 \
          trello-backend:test
        
        sleep 30
        
        curl -f http://localhost:8001/api/auth/ || exit 1
        
        docker stop backend-test postgres-test || true
        docker rm backend-test postgres-test || true
        docker network rm trello-test || true
